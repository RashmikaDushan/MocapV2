import numpy as np
from Helpers import triangulate_points
from scipy import linalg

image_points = np.array([
  [
    [382.0, 489.0],
    [419.0, 479.0],
    [502.0, 459.0],
    [592.0, 436.0],
    [662.0, 418.0],
    [691.0, 411.0],
    [670.0, 398.0],
    [624.0, 370.0],
    [577.0, 341.0],
    [542.0, 320.0]
  ],
  [
    [244.0, 420.0],
    [271.0, 427.0],
    [340.0, 444.0],
    [431.0, 466.0],
    [514.0, 487.0],
    [552.0, 496.0],
    [567.0, 478.0],
    [598.0, 439.0],
    [629.0, 401.0],
    [650.0, 373.0]
  ],
  [
    [287.0, 349.0],
    [288.0, 360.0],
    [291.0, 390.0],
    [295.0, 431.0],
    [300.0, 474.0],
    [302.0, 495.0],
    [343.0, 490.0],
    [439.0, 479.0],
    [547.0, 466.0],
    [633.0, 456.0]
  ],
  [
    [504.0, 258.0],
    [481.0, 265.0],
    [422.0, 281.0],
    [346.0, 303.0],
    [274.0, 322.0],
    [242.0, 331.0],
    [255.0, 344.0],
    [293.0, 378.0],
    [345.0, 424.0],
    [398.0, 470.0]
  ],
  [
    [699.0, 371.0],
    [670.0, 361.0],
    [606.0, 339.0],
    [538.0, 316.0],
    [486.0, 299.0],
    [466.0, 291.0],
    [445.0, 299.0],
    [395.0, 317.0],
    [328.0, 342.0],
    [265.0, 366.0]
  ],
  [
    [612.0, 481.0],
    [614.0, 463.0],
    [617.0, 425.0],
    [621.0, 387.0],
    [624.0, 360.0],
    [625.0, 350.0],
    [597.0, 348.0],
    [531.0, 343.0],
    [454.0, 338.0],
    [392.0, 335.0]
  ]
])
image_point = np.array([[382.0, 489.0],[244.0, 420.0]])
X = np.array([-0.401885,-0.394443,0,1])


E1 = [
    [0.22245347499847412, 0.03373410180211067, -0.10897918045520782,-1.0],
    [-0.11408089846372604, 0.06577988713979721, -0.21250542998313904,-2.0],
    [-1.6453211060252215e-7, 0.23882004618644714, 0.07392552495002747,1.0],
    [0, 0, 0,1]]

E2 = [
    [0.22536346316337585, -0.03118785098195076, 0.10362734645605087,1.0],
    [0.10821879655122757, 0.06494805216789246, -0.21580186486244202,-2.0],
    [8.46322745218231e-9, 0.23939312994480133, 0.072048120200634,1.0],
    [0, 0, 0,1]]

I1 = [
    [933.33, 0.0, 480,0],
    [0.0, 933.33, 270,0],
    [0.0, 0.0, 1.0,0]
]

I2 = [
    [933.33, 0.0, 480,0],
    [0.0, 933.33, 270,0],
    [0.0, 0.0, 1.0,0]
]

C = [[1.0,0.0,0.0,0.0],
     [0.0,-1.0,0.0,0.0],
     [0.0,0.0,-1.0,0.0],
     [0.0,0.0,0.0,1.0]]

camera_poses = np.array([
  {
    "R": [
      [0.22245347499847412, 0.03373410180211067, -0.10897918045520782],
      [-0.11408089846372604, 0.06577988713979721, -0.21250542998313904],
      [-1.6453211060252215e-7, 0.23882004618644714, 0.07392552495002747]
    ],
    "t": [-1.0, -2.0, 1.0]
  },
  {
    "R": [
      [0.22536346316337585, -0.03118785098195076, 0.10362734645605087],
      [0.10821879655122757, 0.06494805216789246, -0.21580186486244202],
      [8.46322745218231e-9, 0.23939312994480133, 0.072048120200634]
    ],
    "t": [1.0, -2.0, 1.0]
  },
  {
    "R": [
      [0.058996111154556274, -0.07244527339935303, 0.23188604414463043],
      [0.24293920397758484, 0.017592735588550568, -0.0563119575381279],
      [1.0146207074512859e-7, 0.23862560093402863, 0.0745508074760437]
    ],
    "t": [2.102851152420044, -0.4451606571674347, 1.0]
  },
  {
    "R": [
      [-0.20031361281871796, -0.057121288031339645, 0.13824476301670074],
      [0.1495809257030487, -0.0764954686164856, 0.18513235449790955],
      [3.9352627823063813e-7, 0.23105324804782867, 0.09546935558319092]
    ],
    "t": [1.1509677171707153, 1.5657099485397339, 1.0]
  },
  {
    "R": [
      [-0.18269068002700806, 0.05682407319545746, -0.1609196662902832],
      [-0.17065788805484772, -0.06083108112215996, 0.1722656786441803],
      [-3.192823498920916e-7, 0.23573417961597443, 0.0832429900765419]
    ],
    "t": [-1.425733208656311, 1.4929085969924927, 1.0]
  },
  {
    "R": [
      [0.04362538084387779, 0.06847036629915237, -0.23645007610321045],
      [-0.2461642324924469, 0.012134311720728874, -0.041903845965862274],
      [-5.118326384945249e-8, 0.24013447761535645, 0.06953727453947067]
    ],
    "t": [-2.2302086353302, -0.4270809292793274, 1.0]
  }
]
)

# E1 = np.array(E1)
# I1 = np.array(I1)

# E2 = np.array(E2)
# I2 = np.array(I2)

# P1 = I1 @ np.linalg.inv(E1 @ C)
# P2 = I2 @ np.linalg.inv(E2 @ C)

# A = [image_point[0][1]*P1[2,:] - P1[1,:], 
#      P1[0,:] - image_point[0][0]*P1[2,:], 
#      image_point[1][1]*P2[2,:] - P2[1,:], 
#      P2[0,:] - image_point[1][0]*P2[2,:]]

# A = np.array(A).reshape((2*2,4))

# B = A.transpose() @ A
# U, s, Vh = linalg.svd(B, full_matrices = False)
# object_point = Vh[3,0:3]/Vh[3,3]

# print(object_point)

# def DLT(P1, P2, point1, point2):
 
#     A = [point1[1]*P1[2,:] - P1[1,:],
#          P1[0,:] - point1[0]*P1[2,:],
#          point2[1]*P2[2,:] - P2[1,:],
#          P2[0,:] - point2[0]*P2[2,:]
#         ]
#     A = np.array(A).reshape((4,4))
#     #print('A: ')
#     #print(A)
 
#     B = A.transpose() @ A
#     from scipy import linalg
#     U, s, Vh = linalg.svd(B, full_matrices = False)
 
#     # print('Triangulated point: ')
#     # print(Vh[3,0:3]/Vh[3,3])
#     return Vh[3,0:3]/Vh[3,3]

# obj = DLT(P1, P2, image_point[0], image_point[1])
# print(obj)


image_points = image_points.transpose((1,0,2))
print(image_points.shape)
objs = triangulate_points(image_points,camera_poses)
print(objs)